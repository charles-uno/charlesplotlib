#!/usr/bin/env python

# Charles McEachern

# Spring 2016

# #############################################################################
# #################################################################### Synopsis
# #############################################################################

# Example driver for the Charlesplotlib plotting library. 

# #############################################################################
# ######################################################### Load Python Modules
# #############################################################################

import charlesplotlib as cpl
import numpy as np

# #############################################################################
# ######################################################################## Main
# #############################################################################

def main():

  return contour()




# #############################################################################
# ################################################################ Contour Plot
# #############################################################################

def contour():

  pw = cpl.plotwindow(2, 2, slope=1.)

  n = 5

  x = np.linspace(0, 10, n)
  y = np.linspace(0, 10, n)

  for i in range(4):
    z = np.random.rand(n, n)
    pw[i].contour(x, y, z)

  clabs = ('column 0', 'column 1')

  rlabs = ('row 0 $w^2 = \\sqrt{b}$ test', 'row 1')

  pw.style(clabs=clabs, rlabs=rlabs, title='ABCD sample title')


#  x = np.linspace(0, 10, n+1)
#  y = np.linspace(0, 10, n+1)
#  z = np.random.rand(n, n)
#  pw[3].mesh(x, y, z)

  pw.draw()

  return






# #############################################################################
# ########################################################### For Importability
# #############################################################################

if __name__=='__main__':
  main()


