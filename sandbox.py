#!/usr/bin/env python

# Charles McEachern

# Spring 2016

# #############################################################################
# #################################################################### Synopsis
# #############################################################################

# Example driver for the Charlesplotlib plotting library. 

# #############################################################################
# ######################################################### Load Python Modules
# #############################################################################

import charlesplotlib as cpl
import numpy as np

# #############################################################################
# ######################################################################## Main
# #############################################################################

def main():

  return contour()




# #############################################################################
# ################################################################ Contour Plot
# #############################################################################

def contour():

  pw = cpl.plotwindow(2, 2, slope=1.)

  n = 5

  x = np.linspace(0, 10, n)
  y = np.linspace(0, 10, n)
  z = np.random.rand(n, n)

  pw[0].contour(x, y, z)

  x = np.linspace(0, 10, n+1)
  y = np.linspace(0, 10, n+1)
  z = np.random.rand(n, n)

  pw[3].mesh(x, y, z)


  pw.draw()

  return






# #############################################################################
# ########################################################### For Importability
# #############################################################################

if __name__=='__main__':
  main()


